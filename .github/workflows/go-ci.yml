name: Go CI â€“ All Services

on:
  push:
    paths:
      - "backend/**.go"
      - "backend/**/go.mod"
      - "backend/**/Dockerfile"
      - "backend/**/k8s/*.yaml"
      - ".github/workflows/go-ci.yml"
  pull_request:

jobs:
  build-test:
    runs-on: self-hosted

    strategy:
      matrix:
        service:
          - backend/evaluation-service
          - backend/feed-data-service
          - backend/user-data-service

    defaults:
      run:
        working-directory: ${{ matrix.service }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup kubectl
        run: |
          echo "Setting up kubectl configuration..."
          docker ps | findstr "kindest/node"
          
          $env:KUBECONFIG="$HOME\.kube\config"
          echo "KUBECONFIG set to: $env:KUBECONFIG"
          
          kubectl config use-context kind-visioscience
          echo "Using context: kind-visioscience"

      - name: Verify kubectl access
        run: |
          echo "Verifying kubectl access..."
          kubectl config view
          kubectl cluster-info
          kubectl get nodes
          echo "Kubectl access verified successfully"

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.21"

      - name: Verify & tidy modules
        run: |
          go vet ./...
          go mod tidy

      - name: Build binary
        run: go build -v ./...

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract service name
        id: extract
        run: |
          SERVICE_NAME=$(echo ${{ matrix.service }} | sed 's/backend\///')
          echo "name=${SERVICE_NAME}" >> $GITHUB_OUTPUT
          echo "Processing service: ${SERVICE_NAME}"

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.service }}
          push: true
          tags: dragomir1401/${{ steps.extract.outputs.name }}:latest

      - name: Deploy to Kubernetes
        run: |
          echo "Starting deployment for ${{ steps.extract.outputs.name }}..."
          if [ -d "k8s" ]; then
            echo "Found k8s configuration, applying..."
            kubectl apply -f k8s/
            
            echo "Waiting for deployment to complete..."
            kubectl rollout status deployment/${{ steps.extract.outputs.name }} -n default
            
            echo "Deployment completed successfully for ${{ steps.extract.outputs.name }}"
          else
            echo "No k8s configuration found for ${{ steps.extract.outputs.name }}"
          fi
