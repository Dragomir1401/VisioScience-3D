apiVersion: v1
kind: Service
metadata:
  name: monitoring-service
  labels:
    app: monitoring-service
spec:
  ports:
    - port: 8082
      targetPort: 8082
      name: http
  selector:
    app: monitoring-service
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus
  labels:
    app: prometheus
spec:
  ports:
    - port: 9090
      targetPort: 9090
      name: http
  selector:
    app: prometheus
---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  labels:
    app: grafana
spec:
  ports:
    - port: 3000
      targetPort: 3000
      name: http
  selector:
    app: grafana
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      containers:
        - name: prometheus
          image: prom/prometheus:latest
          ports:
            - containerPort: 9090
          volumeMounts:
            - name: prometheus-config
              mountPath: /etc/prometheus
      volumes:
        - name: prometheus-config
          configMap:
            name: prometheus-config
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
        - name: grafana
          image: grafana/grafana:latest
          ports:
            - containerPort: 3000
          volumeMounts:
            - name: grafana-datasources
              mountPath: /etc/grafana/provisioning/datasources
            - name: grafana-config
              mountPath: /etc/grafana/grafana.ini
              subPath: grafana.ini
      volumes:
        - name: grafana-datasources
          configMap:
            name: grafana-datasources
        - name: grafana-config
          configMap:
            name: grafana-config
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
      evaluation_interval: 15s

    scrape_configs:
      - job_name: 'user-data-service'
        static_configs:
          - targets: ['user-data-service:8081']
        metrics_path: '/metrics'

      - job_name: 'feed-data-service'
        static_configs:
          - targets: ['feed-data-service:8080']
        metrics_path: '/metrics'

      - job_name: 'evaluation-service'
        static_configs:
          - targets: ['evaluation-service:8080']
        metrics_path: '/metrics'

      - job_name: 'prometheus'
        static_configs:
          - targets: ['localhost:9090']
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-datasources
data:
  datasources.yaml: |
    apiVersion: 1

    datasources:
      - name: Prometheus
        type: prometheus
        access: proxy
        url: http://prometheus:9090
        isDefault: true
        editable: true
        version: 1
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: monitoring-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: monitoring-service
  template:
    metadata:
      labels:
        app: monitoring-service
    spec:
      containers:
        - name: monitoring-service
          image: dragomir1401/monitoring-service:latest
          ports:
            - containerPort: 8082 
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: monitoring-service-ingress
  annotations:
    konghq.com/strip-path: "false"
    konghq.com/preserve-host: "true"
    konghq.com/protocols: "http,https"
spec:
  ingressClassName: kong
  rules:
    - http:
        paths:
          - path: /grafana
            pathType: Prefix
            backend:
              service:
                name: grafana
                port:
                  number: 3000
          - path: /login
            pathType: Prefix
            backend:
              service:
                name: grafana
                port:
                  number: 3000 
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-config
data:
  grafana.ini: |
    [server]
    root_url = http://localhost:8000/grafana
    serve_from_sub_path = true
    
    [security]
    admin_user = admin
    admin_password = admin
    
    [auth.anonymous]
    enabled = true
    org_name = Main Org.
    org_role = Viewer 