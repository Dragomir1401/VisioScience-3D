apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongo-express-user-data
  labels:
    app: mongo-express-user-data
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongo-express-user-data
  template:
    metadata:
      labels:
        app: mongo-express-user-data
    spec:
      containers:
        - name: mongo-express-user-data
          image: mongo-express:latest
          env:
            # Adresa de host a serviciului MongoDB
            - name: ME_CONFIG_MONGODB_SERVER
              value: "mongo-user-data-service"
            # Portul pe care ascultă MongoDB
            - name: ME_CONFIG_MONGODB_PORT
              value: "27017"
            # Nume utilizator root (din MONGO_INITDB_ROOT_USERNAME)
            - name: ME_CONFIG_MONGODB_ADMINUSERNAME
              value: "root"
            # Parola root (din MONGO_INITDB_ROOT_PASSWORD)
            - name: ME_CONFIG_MONGODB_ADMINPASSWORD
              value: "root"
            # Opțional, user + pass pentru acces la interfața mongo-express
            - name: ME_CONFIG_BASICAUTH_USERNAME
              value: "admin"
            - name: ME_CONFIG_BASICAUTH_PASSWORD
              value: "password"
            - name: ME_CONFIG_SITE_BASEURL
              value: "/mongo-express-user-data"
---
apiVersion: v1
kind: Service
metadata:
  name: mongo-express-user-data-service
  labels:
    app: mongo-express-user-data
spec:
  type: ClusterIP
  selector:
    app: mongo-express-user-data
  ports:
    - name: http
      port: 8081
      targetPort: 8081
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: mongo-express-user-data-ingress
  annotations:
    konghq.com/strip-path: "false"
spec:
  ingressClassName: kong
  rules:
    - http:
        paths:
          - path: /mongo-express-user-data
            pathType: Prefix
            backend:
              service:
                name: mongo-express-user-data-service
                port:
                  number: 8081
